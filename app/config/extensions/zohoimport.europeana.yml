# debug mode will make this process a lot slower
debug_mode: false
# the path for downloads images in hookafterload
image_path: 'zoho_images'
# set image_downloads to true for the hookafterload images
image_downloads: true

# Make the associations with the different values and their structure tree equivalent
# rank  - the order of importance, with 1 as highest rank
# label - the label that is present in the source field
# id    - the id for the target field
# the default map will be the one that is set for all non matching records
structure_tree_map:
    founding:
        rank: 1
        label: "Founding Member"
        id: 55
    governing:
        rank: 2
        label: "Governing Board"
        id: 55
    management:
        rank: 3
        label: "Association Management Board"
        id: 56
    council:
        rank: 4
        label: "Association Members Council"
        id: 56
    members:
        rank: 5
        label: "Association Network Member"
        id: 59
    partners:
        rank: 6
        label: "Partner"
        id: 29
    default:
        rank: 10
        label: "*"
        id: 29

remotes:
    zoho_json_remote:
        enabled: true
        source:
            url: https://crm.zoho.com/crm/private/json/Contacts/getRecords
            getparams:
                authtoken: 'e95153d23c8b0d4a5eb5c885531f2d6b'
                scope: crmapi
            loopparams:
                counter: fromIndex
                stepper: toIndex
                start: 1       # start at this (should be 1)
                size: 100      # number of records to fetch per iteration
            # generate a token by going to
            # https://accounts.zoho.com/apiauthtoken/create?SCOPE=ZohoCRM/crmapi
            # file: examples/Contacts-Timothy.json
            type: json
        target:
            contenttype: network
            defaults:
                new: 'published'       # may also be any valid status
                updated: 'published'   # may also be any valid status
                removed: 'unpublished' # may also be any valid status
            hookafterload:
                image:
                    callback: downloadZohoPhotoFromURL
                    source_url: 'https://crm.zoho.com/crm/private/xml/Contacts/downloadPhoto?authtoken=e95153d23c8b0d4a5eb5c885531f2d6b&scope=crmapi&id=CONTACTID'
                    source_field: CONTACTID
                    target_field: image
                structure_parent:
                    callback: setParentStructure
                    source_url: false
                    source_field: "Participation level"
                    target_field: structure_parent
            mapping: # mappings in XPATH
                root: 'response.result.Contacts.row'
                fields:
                    # bolt_col: "ZOHO Field name"           # example: "Example value"
                    uid: "CONTACTID"                        # example: "1482250000000152005"
                    datecreated: "Created Time"             # example: "2015-06-04 16:37:25"
                    datechanged: "Modified Time"            # example: "2015-06-09 14:44:58"

                    first_name: "First Name"                # example: "Timothy"
                    last_name: "Last Name"                  # example: "Test"

                    company: "Account Name"                 # example: "Test"
                    job_title: "Title"                      # example: "Tester"

                    email: "Email"                          # example: "test@browsercheck.nl"
                    secondary_email: "Secondary Email"      # example: "twest2@browsercheck.nl"
                    telephone_number: "Phone"               # example: "0703457628"
                    other_number: "Mobile"                  # example: "+316123456789"

                    #introduction: "Description"             # example: "Test record"

                    skype: "Skype ID"                       # example: "example"
                    twitter: "Twitter"                      # example: "twokings"
                    linkedin: "LinkedIn"                    # example: "https://linkedin.com/in/twokings"

                    network_participation: "Participation level"
                                                            # example: "Governing Board;Association Members Council"
                    community: "Member of community"        # example: "Data partner;EuropeanaTech (R&D)"
                    community: "Interested in..."           # example: "Data partner;EuropeanaTech (R&D)
                    europeana_tech: "Member of EuropeanaTech"
                    community_role: "Community role"        # example: "Test"

                    public_email: "Public email"            # example: "test@browsercheck.nl"
                    public_phone: "Public phone"            # example: "1234567890"
                    public_photo: "Show photo on europeana site"
                                                            # example: "true"
                    introduction: "Public introduction"     # example: "Test record"
                    sector: "Sector"
                    country: "Country"
                    description: "Description"


                    # fields that can safely be ignored
                    europeana_id: "ID"                      # default: "EL30MC"
                    author_uid: "SMOWNERID"                 # example: "1482250000000131003"
                    author_name: "Contact Owner"            # example: "Bob den Otter"
                    modified_uid: "MODIFIEDBY"              # example: "1482250000000131003"
                    modified_name: "Modified By"            # example: "Bob den Otter"
                    latime: "Last Activity Time"            # example: "2015-06-09 14:44:58"
                    account_uid: "ACCOUNTID"                # example: "1482250000000152017"
                    statutes_read: "I have read & agree to the statutes"
                                                            # example: "true"
                    statutes_agree: "I agree to statutes"   # example: "true"
